cn=
# shellcheck disable=SC2034 # Referenced indirectly
country=GB
# shellcheck disable=SC2034 # Referenced indirectly
expiration_days=365
bits=4096
cert_path=ca.cert.pem
key_path=ca.key.pem

_help () {
    cat <<EOF
$0 [-h] [-n <cn>] [-c <country>] [-d <days>] [-b <bits>]
    [-a <cacert>] [-k <cakey>] <name>

<name>: The username for this certificate.

-h: Show this help message
-n: Set the common name on the certificate, e.g. \`-n 'Adam Dinwoodie'\`.
    Defaults to using the username.
-c: Set the country code on the certificate, e.g. \`-c US\`.  Defaults to GB.
-d: Set the certificate expiry time in days from now, e.g. \`-d 28\`.  Defaults
    to 365.
-b: Set the key length in bits, e.g. \`-b 2048\`.  Defaults to 4096.
-a: Path to the CA certificate that will sign this certificate.  Defaults to
    ./ca.cert.pem.
-k: Path to the CA certificate key that will sign this certificate.  Defaults
    to ./ca.key.pem.
EOF
}

while getopts ':n:c:d:b:a:k:h' opt; do
    # shellcheck disable=SC2034 # Referenced indirectly
    case "$opt" in
    n)  cn="$OPTARG";;
    c)  country="$OPTARG";;
    d)  expiration_days="$OPTARG";;
    b)  bits="$OPTARG";;
    a)  cert_path="$OPTARG";;
    k)  key_path="$OPTARG";;
    h)  _help
        exit 0
        ;;
    *)  printf -- '-%s is not a valid option!\n\n' "$OPTARG" >&2
        _help >&2
        exit 64 # EX_USAGE
        ;;
    esac
done

shift "$((OPTIND-1))"
if (( $# != 1 )); then
    echo "Unexpected number of non-option arguments: $#" >&2
    echo
    _help >&2
    exit 64 # EX_USAGE
fi

name="$1"

[[ "$cn" ]] || cn="$name"

template () {
    for arg in cn country expiration_days; do
        if [[ "${!arg}" ]]; then
            echo "$arg = ${!arg}"
        fi
    done
    echo 'tls_www_client'
    echo 'encryption_key'
    echo 'signing_key'
}

umask 077
certtool --generate-privkey --bits "$bits" >"$name".key.pem

umask 022
certtool \
    --generate-certificate \
    --load-privkey "$name".key.pem \
    --load-ca-certificate "$cert_path" \
    --load-ca-privkey "$key_path" \
    --template <(template || :) \
    >"$name".cert.pem

cat <<EOF
User certificate and key created sucessfully.  Now you need to copy
${name}.cert.pem and ${name}.key.pem to wherever Taskwarrior is expecting to
find them.
EOF

# vim: ft=bash et ts=4
