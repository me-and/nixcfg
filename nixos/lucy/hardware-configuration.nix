# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "usbhid"
  ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/fc265809-6c29-4b94-9228-4e31ace0fbfa";
    fsType = "btrfs";
    options = [ "subvol=@" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/b434324e-f6ac-4554-a8ef-4b53696c6b6c";
    fsType = "ext4";
  };

  fileSystems."/home/adam/.cache/mail" = {
    device = "/dev/disk/by-uuid/3c029ca6-21be-43a2-b147-25368bc98336";
    fsType = "btrfs";
    options = [
      "subvol=@mail"
      "noexec"
    ];
  };

  fileSystems."/usr/local/share/archives" = {
    device = "/dev/disk/by-uuid/a26954eb-74b3-4d60-a386-c6985563475f";
    fsType = "btrfs";
    options = [ "noexec" ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/d30e4b40-4b60-4e9b-829a-45c8498220c7"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.end0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
